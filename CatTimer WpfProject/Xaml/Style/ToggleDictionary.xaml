<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CatTimer_WpfProject">

    <SolidColorBrush x:Key="Toggle.OptionMark.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Toggle.OptionMark.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Toggle.OptionMark.Static.Glyph" Color="#FFE3E3E3"/>
    <SolidColorBrush x:Key="Toggle.OptionMark.MouseOver.Background" Color="White"/>
    <SolidColorBrush x:Key="Toggle.OptionMark.MouseOver.Border" Color="White"/>
    <SolidColorBrush x:Key="Toggle.OptionMark.MouseOver.Glyph" Color="#FFE3E3E3"/>
    <SolidColorBrush x:Key="Toggle.OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="Toggle.OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="Toggle.OptionMark.Disabled.Glyph" Color="#FF707070"/>
    <SolidColorBrush x:Key="Toggle.OptionMark.Pressed.Background" Color="White"/>
    <SolidColorBrush x:Key="Toggle.OptionMark.Pressed.Border" Color="White"/>
    <SolidColorBrush x:Key="Toggle.OptionMark.Pressed.Glyph" Color="#FFE3E3E3"/>




    <Style x:Key="ToggleStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource Toggle.OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Toggle.OptionMark.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border x:Name="checkBoxBorder" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                CornerRadius="5">
                            <Grid x:Name="markGrid">
                                <Rectangle x:Name="optionMark" Fill="{StaticResource Toggle.OptionMark.Static.Glyph}" Opacity="0" Stretch="Fill"
                                           RadiusX="5" RadiusY="5"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource Toggle.OptionMark.Static.Glyph}" Opacity="0" Stretch="Fill"
                                           RadiusX="5" RadiusY="5"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource Toggle.OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource Toggle.OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource Toggle.OptionMark.MouseOver.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource Toggle.OptionMark.MouseOver.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource Toggle.OptionMark.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource Toggle.OptionMark.Disabled.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource Toggle.OptionMark.Disabled.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource Toggle.OptionMark.Disabled.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource Toggle.OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource Toggle.OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource Toggle.OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource Toggle.OptionMark.Pressed.Glyph}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>